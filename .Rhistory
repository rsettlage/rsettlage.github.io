# compute R and Theta
R <- 2*pi*u2
Theta <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
# probably need 3 plots, u's,x's and then y
plot(x1,x2)
# draw u1 and u2 as unifs
set.seed(234662)
draws <- 10000
u1 <- runif(draws)
u2 <- runif(draws)
# compute R and Theta
R <- 2*pi*u2
Theta <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
# probably need 3 plots, u's,x's and then y
plot(x1,x2)
# draw u1 and u2 as unifs
set.seed(194756)
draws <- 10000
u1 <- runif(draws)
u2 <- runif(draws)
# compute R and Theta
R <- 2*pi*u2
Theta <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
# probably need 3 plots, u's,x's and then y
plot(x1,x2)
# draw u1 and u2 as unifs
set.seed(194756)
draws <- 10000
x1 <- rep(0,draws)
x2 <- rep(0,draws)
for(i in 1:draws){
# draw u1,u2
u1 <- runif(1)
u2 <- runif(1)
# compute R and Theta
R <- 2*pi*u2
Theta <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1[i] <- R*cos(Theta)
x2[i] <- R*sin(Theta)
}
# probably need 3 plots, u's,x's and then y
plot(x1,x2)
plt <- ggplot(df=cbind(x1,x2), aes(x=x1)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
plt <- ggplot(df=as.data.frame(cbind(x1,x2)), aes(x=x1)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
df <- data.frame(cbind(x1,x2))
plt <- ggplot(df, aes(x=x1)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
print(plt)
plt <- ggplot(df, aes(x=x2)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
print(plt)
# draw u1 and u2 as unifs
set.seed(194756)
draws <- 10000
x1 <- rep(0,draws)
x2 <- rep(0,draws)
for(i in 1:draws){
# draw u1,u2
u1 <- runif(1)
u2 <- runif(1)
# compute R and Theta
Theta <- 2*pi*u2
R <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1[i] <- R*cos(Theta)
x2[i] <- R*sin(Theta)
}
# probably need 3 plots, u's,x's and then y
plot(x1,x2)
df <- data.frame(cbind(x1,x2))
plt <- ggplot(df, aes(x=x2)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
print(plt)
# draw u1 and u2 as unifs
set.seed(194756)
draws <- 10000
x1 <- runif(1) #rep(0,draws)
x2 <- runif(1) #rep(0,draws)
# draw u1 and u2 as unifs
set.seed(194756)
x1 <- rep(0,draws)
x2 <- rep(0,draws)
# draw u1,u2
u1 <- runif(draws)
u2 <- runif(draws)
# compute R and Theta
Theta <- 2*pi*u2
R <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
plot(x1,x2)
df <- data.frame(cbind(x1,x2))
# probably need 2 plots, u's,x's
df_u <- data.frame(cbind(u1,u2))
df_x <- data.frame(cbind(x1,x2))
us <- ggplot(df_u,aes(x=u1,y=u2)) + geom_point() + theme_bw()
us
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "red", size=0.1) +
coord_fixed() +
ggtitle("Contours of rejected points after burn-in")
us_density
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of rejected points after burn-in")
us_density
# draw u1 and u2 as unifs
draws <- 10000
# draw u1,u2
set.seed(194756)
u1 <- runif(draws)
set.seed(194396)
u2 <- runif(draws)
# compute R and Theta
Theta <- 2*pi*u2
R <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
# probably need 2 plots, u's,x's
df_u <- data.frame(cbind(u1,u2))
df_x <- data.frame(cbind(x1,x2))
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of u1 vs u2. Should be two independent sets of draws")
us_density
plt <- ggplot(df_x, aes(x=x2)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
plt
df_x <- data.frame(xs=c(x1,x2),xlabs=rep("x1","x2",draws))
head(df_x)
plt <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
plt
df_x <- data.frame(xs=c(x1,x2),xlabs=rep("x1","x2",2*draws))
plt <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
plt
head(df_X)
head(df_x)
tail(df_x)
?rep
rep(c("x","y"),3)
df_x <- data.frame(xs=c(x1,x2),xlabs=rep(c("x1","x2"),each=draws))
head(df_X)
head(df_x)
tail(df_x)
plt <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) + geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) + theme_bw()
plt
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
df_x <- data.frame(cbindx1,x2)
df_x <- data.frame(cbind(x1,x2))
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
xs_density
df_x <- data.frame(xs=c(x1,x2),xlabs=rep(c("x1","x2"),each=draws))
xs_hist <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) +
geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) +
theme_bw()
xs_hist
# draw u1 and u2 as unifs
draws <- 10000
# draw u1,u2
set.seed(194756)
u1 <- runif(draws)
set.seed(194396)
u2 <- runif(draws)
# compute R and Theta
Theta <- 2*pi*u2
R <- sqrt(-2*log(1-u1))
# finally, X1 and X2 as N(0,1)
x1 <- R*cos(Theta)
x2 <- R*sin(Theta)
# probably need 2 plots, u's,x's
df_u <- data.frame(cbind(u1,u2))
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of u1 vs u2. Should be two independent sets of draws from uniform(0,1)")
df_x <- data.frame(cbind(x1,x2))
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
df_x <- data.frame(xs=c(x1,x2),xlabs=rep(c("x1","x2"),each=draws))
xs_hist <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) +
geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) +
theme_bw()
ggarrange(us_density,xs_density,xs_hist,nrow = 1)
ggarrange(us_density,xs_density,xs_hist,nrow = 1)
ggarrange(us_density,xs_density,xs_hist,nrow = 2)
ggarrange(us_density,xs_density,xs_hist,nrow = 3)
?ggarrange
?ggtitle
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle(subtitle="Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle(title=NULL, subtitle="Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle(title=NULL, subtitle="Contours of x1 vs x2. Should be two independent sets of draws from normal(0,1)")
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of u1 vs u2.)
df_x <- data.frame(cbind(x1,x2))
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of u1 vs u2")
df_x <- data.frame(cbind(x1,x2))
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
geom_point(colour = "pink", size=0.1) +
ggtitle("Contours of x1 vs x2.)
df_x <- data.frame(xs=c(x1,x2),xlabs=rep(c("x1","x2"),each=draws))
xs_hist <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) +
geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) +
theme_bw()
us_density <- ggplot(df_u, aes(x=u1, y=u2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of u1 vs u2")
df_x <- data.frame(cbind(x1,x2))
xs_density <- ggplot(df_x, aes(x=x1, y=x2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
df_x <- data.frame(xs=c(x1,x2),xlabs=rep(c("x1","x2"),each=draws))
xs_hist <- ggplot(df_x, aes(x=xs, color=xlabs, fill=xlabs)) +
geom_histogram(aes(y=..density..), bins = 60, position="identity", alpha=0.3) +
theme_bw()
ggarrange(us_density,xs_density,xs_hist,nrow = 3)
## first shift and spread x_[12]
x_1_mean <- 3
x_1_var <- 7
x_2_mean <- 1
x_2_var <- 2
x_1_transformed <- x_1*x_1_var + x_1_mean
## first shift and spread x_[12]
x1_mean <- 3
x1_var <- 7
x2_mean <- 1
x2_var <- 2
x1_transformed <- x1*x1_var + x1_mean
mean(x1_transformed)
var(x1_transformed)
x1_transformed <- x1*sqrt(x1_var) + x1_mean
var(x1_transformed)
x2_transformed <- x2*sqrt(x2_var) + x2_mean
var(x2_transformed)
mean(x2_transformed)
mean(x2)
var(x2)
?as.matrix
# now create correlated y
C <- as.matrix(c(1,-0.3,-0.3,1),nrow=2)
C
# now create correlated y
C <- as.matrix(c(1,-0.3,-0.3,1),nrow=2,ncol=2)
C
dim(C)
# now create correlated y
C <- as.matrix(1:4,nrow=2,ncol=2,byrow=TRUE)
C
# now create correlated y
C <- as.array(1:4,nrow=2,ncol=2,byrow=TRUE)
C
dim(C)
?array
# now create correlated y
C <- array(1:4,dim=c(2,2))
C
X <- matrix(x1,x2)
head(x1)
dim(x1)
length(x1)
X <- array(x1,x2,dim=c(2,1))
X <- matrix(cbin(x1,x2))
X <- matrix(cbind(x1,x2))
dim(X)
X <- as.data.frame(x1,x2)
X <- as.data.frame(x1=x1,x2=x2)
X <- cbind(x1,x2)
head(X)
dim(X)
y<-X%*%C
head(y)
mean(y1)
mean(y[,1])
head(x1)
head(x1_transformed)
head(X)
mean(X[,1])
X <- cbind(x1_transformed,x2_transformed)
mean(y[,1])
mean(X[,1])
mean(X[,2])
y<-X%*%C
mean(y[,1])
corr(y)
cor(y)
cov(y)
cov(t(y))
cov(X)
# now create correlated y
C <- array(7,-0.3,-0.3,2,dim=c(2,2))
# now create correlated y
C <- array(c(7,-0.3,-0.3,2),dim=c(2,2))
C
X <- cbind(x1,x2)
head(X)
cov(X%*%C)
sqrt(2.666)
# now create correlated y
C <- array(c(x1_var,0,0,x2_var),dim=c(2,2))
C
# now create correlated y
C <- array(c(sqrt(x1_var),0,0,sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
# now create correlated y
C <- array(c(sqrt(x1_var),-0.3,-0.3,sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
plot(X%*%C)
C <- array(c(sqrt(x1_var),0,0,sqrt(x2_var)),dim=c(2,2))
plot(X%*%C)
C <- array(c(sqrt(x1_var),-0.3,0.3,sqrt(x2_var)),dim=c(2,2))
plot(X%*%C)
cov(X%*%C)
## define desired locations, spread and covariance
x1_mean <- 3
x1_var <- 0.7
x2_mean <- 1
x2_var <- 2
# now create correlated y
C <- array(c(sqrt(x1_var),-0.3,-0.3,sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
C <- array(c(sqrt(x1_var),-0.3,0.3,sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
C <- array(c(sqrt(x1_var),-0.3,-0.3,sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
plot(X%*%C)
C%*%C
C
# now create correlated y
C <- array(c(sqrt(x1_var),-sqrt(0.3),-sqrt(0.3),sqrt(x2_var)),dim=c(2,2))
cov(X%*%C)
C
C<-array(c(0.7,-0.3,-0.3,2),dim=c(2,2))
C
chol(C)
cov(X%*%chol(C))
plot(X%*%chol(C))
C<-array(c(0.1,-0.3,-0.3,2),dim=c(2,2))
plot(X%*%chol(C))
C<-array(c(0.1,-0.2,-0.2,2),dim=c(2,2))
plot(X%*%chol(C))
C<-array(c(0.1,-0.4,-0.4,2),dim=c(2,2))
plot(X%*%chol(C))
C<-array(c(0.1,-0.4,0.4,2),dim=c(2,2))
plot(X%*%chol(C))
C<-array(c(0.1,-0.4,-0.4,2),dim=c(2,2))
plot(X%*%chol(C))
## define desired locations, spread and covariance
x1_mean <- 3
x1_var <- 0.1
x2_mean <- 1
x2_var <- 2
# now create correlated y
S2 <- array(c(sqrt(x1_var),-sqrt(0.3),-sqrt(0.3),sqrt(x2_var)),dim=c(2,2))
S <- chol(C)
mu <- c(x1_mean,x2_mean)
X <- cbind(x1,x2)
Y <- X%*%S + mu
mean(Y[,1])
mean(Y[,2])
head(X%*%S)
head(X%*%S)+mu
mu <- matric(c(x1_mean,x2_mean),nrow=2)
mu <- matrix(c(x1_mean,x2_mean),nrow=2)
head(X%*%S)+mu
head(X%*%S)
head(X%*%S)+t(mu)
mu <- rep(c(x1_mean,x2_mean),each=draws)
head(X%*%S)+mu
head(X%*%S)+head(mu)
head(X%*%S)
Y <- X%*%S + mu
mean(Y[,1])
mean(Y[,2])
plot(Y)
## define desired locations, spread and covariance
x1_mean <- 3
x1_var <- 0.1
x2_mean <- 1
x2_var <- 2
xy_cov <- -0.3
# now create correlated y
S2 <- array(c(x1_var,xy_cov,xy_cov,x2_var),dim=c(2,2))
S <- chol(S2)
mu <- rep(c(x1_mean,x2_mean),each=draws)
X <- cbind(x1,x2)
Y <- X%*%S + mu
plot(Y)
S
sqrt(0.3)
## define desired locations, spread and covariance
x1_mean <- 3
x1_var <- 0.1
x2_mean <- 1
x2_var <- 2
xy_cov <- -0.4
# now create correlated y
S2 <- array(c(x1_var,xy_cov,xy_cov,x2_var),dim=c(2,2))
S <- chol(S2)
mu <- rep(c(x1_mean,x2_mean),each=draws)
X <- cbind(x1,x2)
Y <- X%*%S + mu
plot(Y)
cov(Y)
Y_density <- ggplot(Y, aes(x=Y[,1], y=Y[,2])) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
head(as.data.frame(Y))
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
Y_density
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.0.5) +
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.5) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
Y_density
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.05) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
Y_density
?geom_point
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.05,alpha=0.02) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
Y_density
Y_density <- ggplot(as.data.frame(Y), aes(x=V1, y=V2)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white") +
geom_point(colour = "pink", size=0.05,alpha=0.1) +
coord_fixed() +
ggtitle("Contours of x1 vs x2")
Y_density
colnames(Y_df) <- c("y1","y2")
Y_df <- as.data.frame(Y)
colnames(Y_df) <- c("y1","y2")
summarize(Y)
summary(Y)
mean(Y)
unlink("_mcmc/2022-06-14-box-muller-tldr/box-muller-tldr_cache", recursive = TRUE)
20000/700/12
800*12*2
12*.5
12*.4
distill::create_post("Hobbs-Hooton-ch1", collection = "books", slug="BHobbs-Hooton-ch1",date = "2022-07-02",draft = TRUE)
distill::create_post("Hobbs-Hooton-ch2", collection = "books", slug="Hobbs-Hooton-ch2",date = "2022-07-03",draft = TRUE)
distill::create_post("Hobbs-Hooton-ch3", collection = "books", slug="Hobbs-Hooton-ch3",date = "2022-07-03",draft = TRUE)
distill::create_post("Importance-sampling-tldr", collection = "mcmc", slug="Importance-sampling-tldr",date = "2022-07-12",draft = TRUE)
unlink("_mcmc/2022-07-12-importance-sampling-tldr/importance-sampling-tldr_cache", recursive = TRUE)
unlink("_mcmc/2022-07-12-importance-sampling-tldr/importance-sampling-tldr_cache", recursive = TRUE)
unlink("_mcmc/2022-07-12-importance-sampling-tldr/importance-sampling-tldr_cache", recursive = TRUE)
unlink("_mcmc/2022-07-12-importance-sampling-tldr/importance-sampling-tldr_cache", recursive = TRUE)
unlink("_mcmc/2022-07-12-importance-sampling-tldr/importance-sampling-tldr_cache", recursive = TRUE)
